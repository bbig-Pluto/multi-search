<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.post.repository.post.CommentMapper">

    <!-- 상세 게시글 화면에 들어오는 순간 댓글 목록도 같이 나간다 -->
    <select id="getComments" parameterType="long" resultType="com.post.domain.posts.Comment">
        WITH recursive parent_comment AS (
            SELECT
                comment_id,
                parent_id,
                post_id,
                content,
                member_id,
                del_yn,
                create_date,
                update_date,
                convert(comment_id, char) AS path -- 댓글의 계층 구조를 추적하기 위함 ( path : 1-2-3 || 2-3-4 )
            FROM comment
            WHERE parent_id IS NULL -- 최상위 부모 댓글 의미
              AND post_id = #{postId}
            UNION ALL
            SELECT
                child_comment.post_id,
                child_comment.parent_id,
                child_comment.post_id,
                child_comment.content,
                child_comment.member_id,
                child_comment.del_yn,
                child_comment.create_date,
                child_comment.update_date,
                concat(parent_comment.comment_id, '-', child_comment.comment_id) AS path -- 부모 path에 '-' 구분 기호를 사용하여 하위 댓글 계층 구조를 표현
            FROM comment child_comment
                join parent_comment
                    on child_comment.parent_id = parent_comment.comment_id
            where
                child_comment.post_id = #{postId}
        )

        SELECT 
            pc.comment_id,
            pc.parent_id,
            pc.post_id,
            pc.content,
            pc.member_id,
            pc.del_yn,
            pc.create_date,
            pc.update_date,
            pc.path AS path
        FROM parent_comment pc
        ORDER BY
            convert(SUBSTRING_INDEX(path, '-', 1), UNSIGNED) ASC, -- 부모 path 기준 오름차순 정렬 ( 1 || 2 )
            comment_id ASC, -- 부모 기준 오름차순 정렬
            convert(SUBSTRING_INDEX(path, '-', 2), UNSIGNED) ASC, -- 자식 path 기준 오름차순 정렬 ( 1-2 || 1-3 )
            comment_id ASC; -- 자식 기준 오름차순 정렬
    </select>

    <!-- 댓글 정보 존재 여부 반환 -->
    <select id="getCommentCountById" parameterType="long" resultType="int">
        SELECT COUNT(1) FROM comment WHERE comment_id = #{commentId}
    </select>

    <!-- 댓글 정보 저장 -->
    <insert id="saveComment" parameterType="com.post.domain.posts.Comment">
        INSERT INTO comment(
            parent_id
            , post_id
            , content
            , member_id
            , del_yn
            , create_date
            , update_date
        ) VALUES
        (
            #{parentId}
            , #{postId}
            , #{content}
            , #{memberId}
            , 'N'
            , NOW()
            , NOW()
        )
    </insert>
</mapper>
